{"ast":null,"code":"var _jsxFileName = \"/Users/arnaudavocatgros/Documents/GitHub/AReaExplorerWebApp/src/ItemViewer.js\",\n    _s = $RefreshSig$();\n\n// copier coller code iss tracker\nimport * as THREE from \"../node_modules/three/build/three.js\";\nimport { GLTFLoader } from '../node_modules/three/examples/jsm/loaders/GLTFLoader.js';\nimport { RoughnessMipmapper } from '../node_modules/three/examples/jsm/utils/RoughnessMipmapper.js';\nimport Stats from './Stats';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { OrbitControls } from \"../node_modules/three/examples/jsm/controls/OrbitControls\";\nimport { Object3D } from \"three\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ItemViewer(props) {\n  _s();\n\n  const mountRef = useRef(null);\n  const [pos, setPos] = useState(false);\n  const [fac, setFac] = useState(props.fac);\n  useEffect(() => {\n    let pointclouds;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xffffff);\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2();\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 20;\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth * fac, window.innerHeight * fac);\n    mountRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    const loader = new GLTFLoader();\n    loader.load(\"https://lauriaristorage.blob.core.windows.net/\" + props.link, function (gltf) {\n      gltf.scene.name = \"gltf\";\n      var box = new THREE.Box3().setFromObject(gltf.scene);\n      scene.add(gltf.scene);\n    }, xhr => {\n      console.log(xhr.loaded / xhr.total * 100 + '% loaded');\n    }, error => {\n      console.log(error);\n    });\n    const mgeo = new THREE.SphereGeometry(1, 1);\n    const mmat = new THREE.MeshStandardMaterial({\n      color: 0xFFFFFF\n    });\n    const moon = new THREE.Mesh(mgeo, mmat);\n    moon.name = \"intersection\";\n    const pointLight = new THREE.PointLight(0xFFFFFF);\n    pointLight.position.set(10, 30, 10);\n    pointLight.intensity = 3;\n    const ambientLight = new THREE.AmbientLight(0xFFFFFF);\n    ambientLight.intensity = 1;\n    scene.add(pointLight);\n    window.addEventListener('resize', onWindowResize, false);\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth * fac, window.innerHeight * fac);\n      render();\n    }\n\n    window.addEventListener('pointermove', onMouseMove);\n\n    function onMouseMove(event) {\n      if (mountRef.current !== null) {\n        let posDiv = mountRef.current.getBoundingClientRect();\n\n        if (event.clientX > posDiv.x && event.clientX < posDiv.x + posDiv.width && event.clientY > posDiv.y && event.clientY < posDiv.y + posDiv.height) {\n          mouse.x = (event.clientX - posDiv.x) / posDiv.width * 2 - 1;\n          mouse.y = -((event.clientY - posDiv.y) / posDiv.height) * 2 + 1;\n        }\n      }\n    }\n\n    const stats = Stats();\n    document.body.appendChild(stats.dom);\n\n    function animate() {\n      requestAnimationFrame(animate);\n      controls.update();\n      render();\n      stats.update();\n    }\n\n    function render() {\n      raycaster.setFromCamera(mouse, camera); // calculate objects intersecting the picking ray\n\n      const point = new Object3D();\n      const intersects = raycaster.intersectObjects(scene.children);\n\n      for (let i = 0; i < intersects.length; i++) {\n        // You can do anything you want here, this is just an example to make the hovered object transparent\n        //console.log(intersects[i].object.parent.name); \n\n        /*const newMaterial = intersects[i].object.material.clone();\n        intersects[i].object.material = newMaterial;*/\n        if (i === 2) {\n          x = intersects[2].point.x;\n          y = intersects[2].point.y;\n          z = intersects[2].point.z;\n        }\n      }\n\n      window.addEventListener(\"click\", onClick, false);\n\n      function onClick(event) {\n        if (mountRef.current !== null) {\n          let posDiv = mountRef.current.getBoundingClientRect();\n\n          if (event.clientX > posDiv.x && event.clientX < posDiv.x + posDiv.width && event.clientY > posDiv.y && event.clientY < posDiv.y + posDiv.height) {\n            let position = moon.position;\n            props.click(position.x, position.y, position.z);\n          }\n        }\n      }\n\n      moon.position.set(x, y, z);\n      scene.add(moon);\n      renderer.render(scene, camera);\n    }\n\n    window.addEventListener('resize', onWindowResize, false);\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      render();\n    }\n\n    animate(); //return () => mountRef.current.removeChild( renderer.domElement);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      cursor: \"none\"\n    },\n    id: \"3d\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n} //580\n\n_s(ItemViewer, \"qfzJ4fTGJLhWdgomgEMgSrsO8rE=\");\n\n_c = ItemViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemViewer\");","map":{"version":3,"sources":["/Users/arnaudavocatgros/Documents/GitHub/AReaExplorerWebApp/src/ItemViewer.js"],"names":["THREE","GLTFLoader","RoughnessMipmapper","Stats","React","Component","ReactDOM","OrbitControls","Object3D","useEffect","useRef","useState","ItemViewer","props","mountRef","pos","setPos","fac","setFac","pointclouds","scene","Scene","background","Color","raycaster","Raycaster","mouse","Vector2","x","y","z","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","renderer","WebGLRenderer","setSize","current","appendChild","domElement","controls","enableDamping","loader","load","link","gltf","name","box","Box3","setFromObject","add","xhr","console","log","loaded","total","error","mgeo","SphereGeometry","mmat","MeshStandardMaterial","color","moon","Mesh","pointLight","PointLight","set","intensity","ambientLight","AmbientLight","addEventListener","onWindowResize","aspect","updateProjectionMatrix","render","onMouseMove","event","posDiv","getBoundingClientRect","clientX","width","clientY","height","stats","document","body","dom","animate","requestAnimationFrame","update","setFromCamera","point","intersects","intersectObjects","children","i","length","onClick","click","cursor"],"mappings":"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","sourcesContent":["// copier coller code iss tracker\nimport * as THREE from \"../node_modules/three/build/three.js\";\nimport {GLTFLoader} from '../node_modules/three/examples/jsm/loaders/GLTFLoader.js'\n\nimport { RoughnessMipmapper } from '../node_modules/three/examples/jsm/utils/RoughnessMipmapper.js';\nimport Stats from './Stats';\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {OrbitControls} from \"../node_modules/three/examples/jsm/controls/OrbitControls\"\nimport { Object3D } from \"three\";\nimport { useEffect, useRef, useState } from \"react\";\n\n\nexport default function ItemViewer(props){\n    const mountRef = useRef(null);\n    const [pos, setPos] = useState(false);\n    const [fac, setFac] = useState(props.fac);\n\n    useEffect(() => {\n    let pointclouds;\nconst scene = new THREE.Scene()\nscene.background = new THREE.Color( 0xffffff );\nconst raycaster = new THREE.Raycaster();\nconst mouse = new THREE.Vector2();\nlet x = 0\nlet y = 0;\nlet z = 0;\n\nconst camera = new THREE.PerspectiveCamera(\n    75,\n    (window.innerWidth) / (window.innerHeight),\n    0.1,\n    1000\n)\ncamera.position.z = 20\nconst renderer = new THREE.WebGLRenderer()\nrenderer.setSize(window.innerWidth *fac, window.innerHeight * fac)\nmountRef.current.appendChild( renderer.domElement );\nconst controls = new OrbitControls(camera, renderer.domElement)\ncontrols.enableDamping = true\n\n    \nconst loader = new GLTFLoader()\nloader.load(\n    \"https://lauriaristorage.blob.core.windows.net/\" + props.link,\n    function (gltf) {\n        gltf.scene.name = \"gltf\"\n        var box = new THREE.Box3().setFromObject(gltf.scene);\n        scene.add(gltf.scene)\n    },\n    (xhr) => {\n        console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\n    },\n    (error) => {\n        console.log(error)\n    }\n)\nconst mgeo = new THREE.SphereGeometry(1,1);\n  const mmat = new THREE.MeshStandardMaterial({color: 0xFFFFFF});\n  const moon = new THREE.Mesh(mgeo,mmat);\n  moon.name = \"intersection\";\nconst pointLight = new THREE.PointLight(0xFFFFFF);\n    pointLight.position.set(10,30,10);\n    pointLight.intensity = 3;\n    const ambientLight = new THREE.AmbientLight(0xFFFFFF);\n    ambientLight.intensity = 1;\n    scene.add( pointLight)\nwindow.addEventListener('resize', onWindowResize, false)\nfunction onWindowResize() {\n    camera.aspect = window.innerWidth  / (window.innerHeight)\n    camera.updateProjectionMatrix()\n    renderer.setSize(window.innerWidth *fac, window.innerHeight*fac)\n    render()\n}\nwindow.addEventListener('pointermove', onMouseMove);\n\nfunction onMouseMove(event){\n    if(mountRef.current !== null){\n    let posDiv = mountRef.current.getBoundingClientRect();\n    if(event.clientX > posDiv.x && event.clientX < posDiv.x + posDiv.width && event.clientY > posDiv.y && event.clientY < posDiv.y + posDiv.height){\n        mouse.x = ( (event.clientX - posDiv.x) / posDiv.width ) * 2 - 1;\n        mouse.y = - (( event.clientY - posDiv.y) / posDiv.height ) * 2 + 1;\n    }\n}\n  \n}\nconst stats = Stats()\ndocument.body.appendChild(stats.dom)\n\nfunction animate() {\n    requestAnimationFrame(animate)\n\n    controls.update()\n\n    render()\n\n    stats.update()\n}\n\nfunction render() {\n  raycaster.setFromCamera( mouse, camera);\n\n\t// calculate objects intersecting the picking ray\n\n\n  const point = new Object3D();\n  const intersects = raycaster.intersectObjects( scene.children );\n  for (let i = 0; i < intersects.length; i++) {\n    // You can do anything you want here, this is just an example to make the hovered object transparent\n    //console.log(intersects[i].object.parent.name); \n    /*const newMaterial = intersects[i].object.material.clone();\n    intersects[i].object.material = newMaterial;*/\n    if(i === 2){\n      x = intersects[2].point.x;\n      y = intersects[2].point.y;\n      z = intersects[2].point.z;\n    }\n  }\n\n  window.addEventListener(\"click\", onClick, false);\n\n  function onClick(event){\n      if(mountRef.current !== null){\n        let posDiv = mountRef.current.getBoundingClientRect();\n        if(event.clientX > posDiv.x && event.clientX < posDiv.x + posDiv.width && event.clientY > posDiv.y && event.clientY < posDiv.y + posDiv.height){\n          let position = moon.position;\n          props.click(position.x, position.y, position.z);\n        }\n    }\n    \n  }\n  \n  \nmoon.position.set(x,y,z);\n  scene.add(moon);\n    renderer.render(scene, camera)\n}\n\nwindow.addEventListener('resize', onWindowResize, false)\nfunction onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight\n    camera.updateProjectionMatrix()\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    render()\n}\n\n\nanimate()\n\n//return () => mountRef.current.removeChild( renderer.domElement);\n    }, [])\n    \n    \n\n    return (\n        <div ref={mountRef} style={{cursor: \"none\"}}id=\"3d\">\n        </div>\n    )\n  \n}\n\n//580"]},"metadata":{},"sourceType":"module"}